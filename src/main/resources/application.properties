spring.application.name=demo
server.port=8088
# Config later
#keytool -genkeypair -alias myalias -keyalg RSA -keysize 2048 \
#  -storetype PKCS12 -keystore keystore.p12 -validity 3650 \
#  -storepass yourpassword
#server.ssl.enabled=true
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=yourpassword
#server.ssl.key-store-type=PKCS12

# PostgresSQL Database Configuration (store business data)
spring.datasource.business.url=jdbc:postgresql://localhost:5432/banking_system
spring.datasource.business.username=postgres
spring.datasource.business.password=thang06112000
spring.datasource.business.driver-class-name=org.postgresql.Driver

# H2 Database Configuration (store data batch)
spring.datasource.batch.url=jdbc:h2:mem:banking_system_batch;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.batch.username=sa
spring.datasource.batch.password=
spring.datasource.batch.driver-class-name=org.h2.Driver

# Spring Batch setting
spring.batch.jdbc.initialize-schema=always
spring.batch.jdbc.schema=org/springframework/batch/core/schema-h2.sql

# JPA settings
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgresSQLDialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.default_schema=banking_system

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


# Kafka common settings
#spring.kafka.bootstrap-servers=localhost:9092

# Kafka producer configuration
# High throughput / low latency
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
##spring.kafka.producer.linger-ms=5
#spring.kafka.producer.batch-size=16384
## less network I/O
#spring.kafka.producer.compression-type=lz4
## durability + fault-tolerance
#spring.kafka.producer.acks=all
##spring.kafka.producer.enable-idempotence=true
#spring.kafka.producer.retries=5

# Kafka consumer configuration
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.group-id=demo-consumers
#spring.kafka.consumer.auto-offset-reset=earliest
## manual commit for full control
#spring.kafka.consumer.enable-auto-commit=false
## fetch batches
#spring.kafka.consumer.max-poll-records=500

# Kafka listener settings
# we'll commit when work is done
#spring.kafka.listener.ack-mode=manual
#
#api.callApi.kafka.bootstrapServers=localhost:9092
#api.callApi.kafka.kk_clientId=transaction-service-consumer
#api.callApi.kafka.groupId=transfer-consumer-01
#api.callApi.kafka.kk_user_name=username
#api.callApi.kafka.kk_pw=password


#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

# Spring AI config
#spring.ai.openai.api-key=
#spring.ai.openai.chat.base-url=https://api.openai.com/v1/
#spring.ai.openai.chat.options.model=gpt-4o